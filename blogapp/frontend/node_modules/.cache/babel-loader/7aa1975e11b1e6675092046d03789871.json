{"ast":null,"code":"var _jsxFileName = \"/home/nevena/Desktop/fullstackopen/part7/blogapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport Blog from \"./components/Blog\";\nimport LoginForm from \"./components/LoginForm\";\nimport NewBlogForm from \"./components/NewBlogForm\";\nimport Notification from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport userService from \"./services/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const blogFormRef = useRef();\n\n  const byLikes = (b1, b2) => b2.likes > b1.likes ? 1 : -1;\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort(byLikes)));\n  }, []);\n  useEffect(() => {\n    const userFromStorage = userService.getUser();\n\n    if (userFromStorage) {\n      setUser(userFromStorage);\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    loginService.login({\n      username,\n      password\n    }).then(user => {\n      setUser(user);\n      userService.setUser(user);\n      notify(`${user.name} logged in!`);\n    }).catch(() => {\n      notify(\"wrong username/password\", \"alert\");\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    userService.clearUser();\n    notify(\"good bye!\");\n  };\n\n  const createBlog = async blog => {\n    blogService.create(blog).then(createdBlog => {\n      notify(`a new blog '${createdBlog.title}' by ${createdBlog.author} added`);\n      setBlogs(blogs.concat(createdBlog));\n      blogFormRef.current.toggleVisibility();\n    }).catch(error => {\n      notify(\"creating a blog failed: \" + error.response.data.error, \"alert\");\n    });\n  };\n\n  const removeBlog = id => {\n    const toRemove = blogs.find(b => b.id === id);\n    const ok = window.confirm(`remove '${toRemove.title}' by ${toRemove.author}?`);\n\n    if (!ok) {\n      return;\n    }\n\n    blogService.remove(id).then(() => {\n      const updatedBlogs = blogs.filter(b => b.id !== id).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const likeBlog = async id => {\n    const toLike = blogs.find(b => b.id === id);\n    const liked = { ...toLike,\n      likes: (toLike.likes || 0) + 1,\n      user: toLike.user.id\n    };\n    blogService.update(liked.id, liked).then(updatedBlog => {\n      notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`);\n      const updatedBlogs = blogs.map(b => b.id === id ? updatedBlog : b).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const notify = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        notification: notification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new note\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(NewBlogForm, {\n        onCreate: createBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"blogs\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        likeBlog: likeBlog,\n        removeBlog: removeBlog,\n        user: user\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Yyc/+lu8apLmOwefImHrwsBKCc8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Blog","LoginForm","NewBlogForm","Notification","Togglable","blogService","loginService","userService","App","blogs","setBlogs","user","setUser","notification","setNotification","blogFormRef","byLikes","b1","b2","likes","getAll","then","sort","userFromStorage","getUser","login","username","password","notify","name","catch","logout","clearUser","createBlog","blog","create","createdBlog","title","author","concat","current","toggleVisibility","error","response","data","removeBlog","id","toRemove","find","b","ok","window","confirm","remove","updatedBlogs","filter","likeBlog","toLike","liked","update","updatedBlog","map","message","type","setTimeout"],"sources":["/home/nevena/Desktop/fullstackopen/part7/blogapp/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\"\n\nimport Blog from \"./components/Blog\"\nimport LoginForm from \"./components/LoginForm\"\nimport NewBlogForm from \"./components/NewBlogForm\"\nimport Notification from \"./components/Notification\"\nimport Togglable from \"./components/Togglable\"\n\nimport blogService from \"./services/blogs\"\nimport loginService from \"./services/login\"\nimport userService from \"./services/user\"\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n  const blogFormRef = useRef()\n  const byLikes = (b1, b2) => (b2.likes > b1.likes ? 1 : -1)\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs.sort(byLikes)))\n  }, [])\n\n  useEffect(() => {\n    const userFromStorage = userService.getUser()\n    if (userFromStorage) {\n      setUser(userFromStorage)\n    }\n  }, [])\n\n  const login = async (username, password) => {\n    loginService\n      .login({\n        username,\n        password,\n      })\n      .then((user) => {\n        setUser(user)\n        userService.setUser(user)\n        notify(`${user.name} logged in!`)\n      })\n      .catch(() => {\n        notify(\"wrong username/password\", \"alert\")\n      })\n  }\n\n  const logout = () => {\n    setUser(null)\n    userService.clearUser()\n    notify(\"good bye!\")\n  }\n\n  const createBlog = async (blog) => {\n    blogService\n      .create(blog)\n      .then((createdBlog) => {\n        notify(\n          `a new blog '${createdBlog.title}' by ${createdBlog.author} added`\n        )\n        setBlogs(blogs.concat(createdBlog))\n        blogFormRef.current.toggleVisibility()\n      })\n      .catch((error) => {\n        notify(\"creating a blog failed: \" + error.response.data.error, \"alert\")\n      })\n  }\n\n  const removeBlog = (id) => {\n    const toRemove = blogs.find((b) => b.id === id)\n\n    const ok = window.confirm(\n      `remove '${toRemove.title}' by ${toRemove.author}?`\n    )\n\n    if (!ok) {\n      return\n    }\n\n    blogService.remove(id).then(() => {\n      const updatedBlogs = blogs.filter((b) => b.id !== id).sort(byLikes)\n      setBlogs(updatedBlogs)\n    })\n  }\n\n  const likeBlog = async (id) => {\n    const toLike = blogs.find((b) => b.id === id)\n    const liked = {\n      ...toLike,\n      likes: (toLike.likes || 0) + 1,\n      user: toLike.user.id,\n    }\n\n    blogService.update(liked.id, liked).then((updatedBlog) => {\n      notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`)\n      const updatedBlogs = blogs\n        .map((b) => (b.id === id ? updatedBlog : b))\n        .sort(byLikes)\n      setBlogs(updatedBlogs)\n    })\n  }\n\n  const notify = (message, type = \"info\") => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  if (user === null) {\n    return (\n      <>\n        <Notification notification={notification} />\n        <LoginForm onLogin={login} />\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification notification={notification} />\n\n      <div>\n        {user.name} logged in\n        <button onClick={logout}>logout</button>\n      </div>\n\n      <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n        <NewBlogForm onCreate={createBlog} />\n      </Togglable>\n\n      <div id=\"blogs\">\n        {blogs.map((blog) => (\n          <Blog\n            key={blog.id}\n            blog={blog}\n            likeBlog={likeBlog}\n            removeBlog={removeBlog}\n            user={user}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}